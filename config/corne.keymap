/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
*/

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        hrm: hrm {
            compatible = "zmk,behavior-hold-tap";
            label = "Home Row Mods";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            flavor = "tap-preferred";
            quick-tap-ms = <250>;
            require-prior-idle-ms = <250>;
            hold-trigger-key-positions = <16 15 14 13 19 20 21 22>;
        };
    };

    macros {
        toggle_oled: toggle_oled {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none>;
            label = "TOGGLE_OLED";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB    &kp Q  &kp W             &kp E              &kp R            &kp T        &kp Y      &kp U             &kp I               &kp O              &kp P     &kp BSPC
&kp LCTRL  &kp A  &hrm LEFT_META S  &hrm LEFT_SHIFT D  &hrm LCTRL F     &kp G        &kp H      &hrm RCTRL J      &hrm RIGHT_SHIFT K  &hrm RIGHT_META L  &kp SEMI  &kp SQT
&kp LSHFT  &kp Z  &kp X             &kp C              &hrm LEFT_ALT V  &kp B        &kp N      &hrm RIGHT_ALT M  &kp COMMA           &kp DOT            &kp FSLH  &kp ESC
                                    &kp LGUI           &mo 2            &kp ENTER    &kp SPACE  &mo 1             &kp RIGHT_GUI
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp KP_MULTIPLY  &kp N7        &kp N8        &kp NUMBER_9  &kp MINUS     &kp HOME        &kp PAGE_DOWN      &kp PG_UP        &kp END     &kp C_MUTE        &kp BSPC
&kp LCTRL  &kp KP_DIVIDE    &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp PLUS      &kp LEFT        &kp DOWN           &kp UP           &kp RIGHT   &kp COLON         &kp DEL
&kp LSHFT  &kp N0           &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp KP_DOT    &kp C_PREVIOUS  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp C_NEXT  &kp C_PLAY_PAUSE  &kp ESC
                                          &kp LGUI      &mo 3         &kp ENTER     &kp SPACE       &trans             &kp RIGHT_GUI
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp AMPS         &kp AT        &kp SLASH  &kp BACKSLASH  &kp CARET               &kp UNDER     &kp EQUAL      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp PIPE          &kp BSPC
&kp LCTRL  &kp EXCLAMATION  &kp QUESTION  &kp HASH   &kp DOLLAR     &kp PERCENT             &kp MINUS     &kp PLUS       &kp LBKT              &kp RBKT               &kp COLON         &kp DEL
&kp LSHFT  &kp GRAVE        &trans        &trans     &kp C_BRI_DEC  &kp C_BRIGHTNESS_INC    &kp ASTERISK  &kp LESS_THAN  &kp LBRC              &kp RBRC               &kp GREATER_THAN  &kp TILDE
                                          &kp LGUI   &trans         &kp ENTER               &kp SPACE     &trans         &kp RIGHT_GUI
            >;
        };

        layer_3 {
            bindings = <
&bt BT_CLR    &trans        &trans        &trans        &trans        &trans    &trans  &trans      &trans      &trans  &trans  &trans
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &trans    &trans  &bt BT_PRV  &bt BT_NXT  &trans  &trans  &trans
&trans        &trans        &trans        &trans        &trans        &trans    &trans  &trans      &trans      &trans  &trans  &ext_power EP_TOG
                                          &trans        &trans        &trans    &trans  &trans      &trans
            >;
        };
    };
};
